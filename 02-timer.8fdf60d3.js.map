{"mappings":"YAQA,IAAMA,EAAQC,SAASC,cAAc,yBAC/BC,EAASF,SAASC,cAAc,gBAChCE,EAAOH,SAASC,cAAc,eAC9BG,EAAQJ,SAASC,cAAc,gBAC/BI,EAAUL,SAASC,cAAc,kBACjCK,EAAUN,SAASC,cAAc,kBAEvCC,EAAOK,iBAAiB,SAwDxB,WACE,IAAMC,EAAUC,aAAY,WAC1B,IA/BeC,EAEXC,EACAC,EACAC,EACAC,EAGAC,EAEAC,EAEAC,EAEAC,EAkBEC,EADO,IAAIC,KAAKrB,EAAMsB,OACPD,KAAKE,MACpBC,GAjCSb,EAiCUS,EA5BrBL,EAAa,IADbD,EAAgB,IADhBD,EAAkB,IADlBD,EAAS,OAMTI,EAAOS,EAAeC,KAAKC,MAAMhB,EAAKI,IAEtCE,EAAQQ,EAAeC,KAAKC,MAAMhB,EAAMI,EAAOD,IAE/CI,EAAUO,EAAeC,KAAKC,MAAMhB,EAAOI,EAAOD,EAAQD,IAE1DM,EAAUM,EACdC,KAAKC,MAAMhB,EAAQI,EAAOD,EAAQD,EAAUD,IAGvC,CAAEgB,KAAAZ,EAAMa,MAAAZ,EAAOa,QAAAZ,EAASa,QAAAZ,IAmB7Bf,EAAK4B,YAAcR,EAAOI,KAC1BvB,EAAM2B,YAAcR,EAAOK,MAC3BvB,EAAQ0B,YAAcR,EAAOM,QAC7BvB,EAAQyB,YAAcR,EAAOO,QAI7B,IAAME,EAAY,KAEhB7B,EAAK4B,cAAgBC,GACrB5B,EAAM2B,cAAgBC,GACtB3B,EAAQ0B,cAAgBC,GACxB1B,EAAQyB,cAAgBC,GAExBC,cAAczB,E,GAEf,KAEHN,EAAOgC,SAAW,OAQlBnC,EAAMQ,iBAAiB,SAAS,WAC9BP,SAASmC,SAASC,Q,OAzFtBlC,EAAOgC,SAAW,OAIPG,UAAUtC,EAAO,CAC1BuC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIpB,KACjBqB,gBAAiB,EAKjBC,QAAA,SAAQC,GACFA,EAAc,GAAKvB,KAAKE,OAC1BpB,EAAOgC,SAAW,OAClBU,SAASC,OAAOC,QAAQ,uCAExB5C,EAAOgC,SAAW,E,IA8BxB,SAASV,EAAeH,GACtB,OAAO0B,OAAO1B,GAAO2B,SAAS,EAAG,I","sources":["src/js/02-timer.js"],"sourcesContent":["// Описан в документации\n// import flatpickr from \"flatpickr\";\n// import Notiflix from \"notiflix\";\n// // Дополнительный импорт стилей\n// import \"flatpickr/dist/flatpickr.min.css\";\n\n// Get properties and adding listeners.\n\nconst input = document.querySelector('input#datetime-picker');\nconst button = document.querySelector('[data-start]');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nbutton.addEventListener('click', start);\n\nbutton.disabled = 'true';\n\n// Flatpicker.\n\nlet flat = flatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  //   If the choosen date is valid - ok, else - alert window\n  // and disabled button.\n\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      button.disabled = 'true';\n      Notiflix.Notify.failure('Please choose a date in the future');\n    } else {\n      button.disabled = '';\n    }\n  },\n});\n\n// Converter of Date\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\n// 'Pad' function\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n// Start timer\n\nfunction start() {\n  const timerId = setInterval(() => {\n    const date = new Date(input.value);\n    const minus = date - Date.now();\n    const result = convertMs(minus);\n\n    // Update textContent\n\n    days.textContent = result.days;\n    hours.textContent = result.hours;\n    minutes.textContent = result.minutes;\n    seconds.textContent = result.seconds;\n\n    // Stop the timer\n\n    const END_TIMER = '00';\n    if (\n      days.textContent === END_TIMER &&\n      hours.textContent === END_TIMER &&\n      minutes.textContent === END_TIMER &&\n      seconds.textContent === END_TIMER\n    ) {\n      clearInterval(timerId);\n    }\n  }, 1000);\n\n  button.disabled = 'true';\n\n  reload();\n}\n\n// Reload page\n\nfunction reload() {\n  input.addEventListener('click', () => {\n    document.location.reload();\n  });\n}\n"],"names":["$84b9dae4df53835d$var$input","document","querySelector","$84b9dae4df53835d$var$button","$84b9dae4df53835d$var$days","$84b9dae4df53835d$var$hours","$84b9dae4df53835d$var$minutes","$84b9dae4df53835d$var$seconds","addEventListener","timerId","setInterval","ms","second","minute","hour","day","days1","hours1","minutes1","seconds1","minus","Date","value","now","result","$84b9dae4df53835d$var$addLeadingZero","Math","floor","days","hours","minutes","seconds","textContent","END_TIMER","clearInterval","disabled","location","reload","flatpickr","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","Notiflix","Notify","failure","String","padStart"],"version":3,"file":"02-timer.8fdf60d3.js.map"}