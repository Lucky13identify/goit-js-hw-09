{"mappings":"AAQA,MAAMA,EAAQC,SAASC,cAAc,yBAC/BC,EAASF,SAASC,cAAc,gBAChCE,EAAOH,SAASC,cAAc,eAC9BG,EAAQJ,SAASC,cAAc,gBAC/BI,EAAUL,SAASC,cAAc,kBACjCK,EAAUN,SAASC,cAAc,kBAEvCC,EAAOK,iBAAiB,SAwDxB,WACE,MAAMC,EAAUC,aAAY,KAC1B,MAEMC,EAjCV,SAAmBC,GAEjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNE,EAAOC,EAAeC,KAAKC,MAAMR,EAAKI,IAEtCK,EAAQH,EAAeC,KAAKC,MAAMR,EAAMI,EAAOD,IAE/CO,EAAUJ,EAAeC,KAAKC,MAAMR,EAAOI,EAAOD,EAAQD,IAE1DS,EAAUL,EACdC,KAAKC,MAAMR,EAAQI,EAAOD,EAAQD,EAAUD,IAG9C,MAAO,CAAEW,KAAAP,EAAMQ,MAAAJ,EAAOK,QAAAJ,EAASK,QAAAJ,E,CAedK,CAFF,IAAIC,KAAK7B,EAAM8B,OACPD,KAAKE,OAK1B3B,EAAK4B,YAAcrB,EAAOa,KAC1BnB,EAAM2B,YAAcrB,EAAOc,MAC3BnB,EAAQ0B,YAAcrB,EAAOe,QAC7BnB,EAAQyB,YAAcrB,EAAOgB,QAI7B,MAAMM,EAAY,KAEhB7B,EAAK4B,cAAgBC,GACrB5B,EAAM2B,cAAgBC,GACtB3B,EAAQ0B,cAAgBC,GACxB1B,EAAQyB,cAAgBC,GAExBC,cAAczB,EAAQ,GAEvB,KAEHN,EAAOgC,SAAW,OAQlBnC,EAAMQ,iBAAiB,SAAS,KAC9BP,SAASmC,SAASC,QAAQ,G,IAzF9BlC,EAAOgC,SAAW,OAIPG,UAAUtC,EAAO,CAC1BuC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIZ,KACjBa,gBAAiB,EAKjBC,QAAQC,GACFA,EAAc,GAAKf,KAAKE,OAC1B5B,EAAOgC,SAAW,OAClBU,SAASC,OAAOC,QAAQ,uCAExB5C,EAAOgC,SAAW,E,IA8BxB,SAASjB,EAAeY,GACtB,OAAOkB,OAAOlB,GAAOmB,SAAS,EAAG,I","sources":["src/js/02-timer.js"],"sourcesContent":["// Описан в документации\n// import flatpickr from \"flatpickr\";\n// import Notiflix from \"notiflix\";\n// // Дополнительный импорт стилей\n// import \"flatpickr/dist/flatpickr.min.css\";\n\n// Get properties and adding listeners.\n\nconst input = document.querySelector('input#datetime-picker');\nconst button = document.querySelector('[data-start]');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nbutton.addEventListener('click', start);\n\nbutton.disabled = 'true';\n\n// Flatpicker.\n\nlet flat = flatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  //   If the choosen date is valid - ok, else - alert window\n  // and disabled button.\n\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      button.disabled = 'true';\n      Notiflix.Notify.failure('Please choose a date in the future');\n    } else {\n      button.disabled = '';\n    }\n  },\n});\n\n// Converter of Date\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\n// 'Pad' function\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n// Start timer\n\nfunction start() {\n  const timerId = setInterval(() => {\n    const date = new Date(input.value);\n    const minus = date - Date.now();\n    const result = convertMs(minus);\n\n    // Update textContent\n\n    days.textContent = result.days;\n    hours.textContent = result.hours;\n    minutes.textContent = result.minutes;\n    seconds.textContent = result.seconds;\n\n    // Stop the timer\n\n    const END_TIMER = '00';\n    if (\n      days.textContent === END_TIMER &&\n      hours.textContent === END_TIMER &&\n      minutes.textContent === END_TIMER &&\n      seconds.textContent === END_TIMER\n    ) {\n      clearInterval(timerId);\n    }\n  }, 1000);\n\n  button.disabled = 'true';\n\n  reload();\n}\n\n// Reload page\n\nfunction reload() {\n  input.addEventListener('click', () => {\n    document.location.reload();\n  });\n}\n"],"names":["$40d383fb392a7037$var$input","document","querySelector","$40d383fb392a7037$var$button","$40d383fb392a7037$var$days","$40d383fb392a7037$var$hours","$40d383fb392a7037$var$minutes","$40d383fb392a7037$var$seconds","addEventListener","timerId","setInterval","result","ms","second","minute","hour","day","days1","$40d383fb392a7037$var$addLeadingZero","Math","floor","hours1","minutes1","seconds1","days","hours","minutes","seconds","$40d383fb392a7037$var$convertMs","Date","value","now","textContent","END_TIMER","clearInterval","disabled","location","reload","flatpickr","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","Notiflix","Notify","failure","String","padStart"],"version":3,"file":"02-timer.ad9af026.js.map"}